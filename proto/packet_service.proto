syntax = "proto3";

import "google/protobuf/empty.proto";

option java_package = "generated";

message Packet{
  int64 id = 1;
  Size size = 2;
  Status status = 3;
  int64 currentAddressId = 4;
  int64 finalAddressId = 5;
  int64 senderId = 6;
  int64 receiverId = 7;
  string trackingNumber = 8;
}

message Size{
  int64 id = 1;
  string sizeName = 2;
  string sizeLength = 3;
  string sizeWidth = 4;
  string sizeHeight = 5;
  string sizeWeight = 6;
}

message Sizes{
  repeated Size size = 1;
}

message Status{
  int64 id = 1;
  string status = 2;
  string statusDescription = 3;
}

message Id{
  int64 id = 1;
}

message PacketLocation{
  int64 packetId = 1;
  int64 locationId = 2;
  int64 userId = 3;
}

message Packets{
  repeated Packet packet = 1;
}

message GetPacketTrackingNumber{
  string trackingNumber = 1;
}

message GetPacketIdRpc{
  int64 id = 1;
}

message AddPacket{
  int64  senderId = 1;
  int64 sizeId = 2;
  int64  receiverId = 3;
  int64 finalDestinationId = 4;
}

message IdListRpc{
  repeated int64 id = 1;
}


service PacketService{
  rpc getAllPacketsByLocationId(Id) returns (Packets);
  rpc addPacket(AddPacket) returns (Packet);
  rpc getPacketById(GetPacketIdRpc) returns(Packet);
  rpc getPacketByTrackingNumber(GetPacketTrackingNumber) returns(Packet);
  rpc getAllPacketsBySender(Id) returns(Packets);
  rpc getAllPacketsByReceiver(Id) returns(Packets);
  rpc getAllSizes(google.protobuf.Empty) returns (Sizes);
  rpc getAllPacketsByReceiverIds(IdListRpc) returns(Packets);
  rpc getAllPacketsByUserIds(IdListRpc) returns(Packets);
  rpc updatePacketLocation(PacketLocation) returns(google.protobuf.Empty);
}

