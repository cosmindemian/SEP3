@page "/rabbitmq"
@using Blazored.Toast
@using Blazored.Toast.Services
@using CSharpShared.RabbitMqMessages
@using RabbitMqClient

@implements IDisposable
@inject IToastService toastService

@if(!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

@code {
    CancellationTokenSource messageConsumerCancellationToken = new();

    private string message = "Peperony, extra crispy";
    
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            MqClient.MessageReceived += receiveMessage;

            new MqClient().Setup(messageConsumerCancellationToken.Token);
        }
    }
    
    public void receiveMessage(object? sender, RabbitMqMessage e)
    {

        InvokeAsync(() => StateHasChanged());
        
    }
    

    public void Dispose()
    {
        messageConsumerCancellationToken.Cancel();
    }
}